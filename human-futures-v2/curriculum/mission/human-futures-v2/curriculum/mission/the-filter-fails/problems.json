[
  {
    "problem_text": "Write a method to check whether a 2D array is a Latin Square: all values in first row must appear once in every row and column.",
    "solution_text": "Check for duplicates in first row. Use `hasAllValues` and `getColumn` to check each row and column.",
    "tags": ["validation", "2d_arrays", "nested_logic"],
    "difficulty_level": "hard"
  },
  {
    "problem_text": "Design a 3x3 grid that passes your validation — but still feels unfair. Why?",
    "solution_text": "E.g., one row might be in a different order but still meets rule. Show how structure ≠ fairness.",
    "tags": ["edge_case", "representation", "pattern_failures"],
    "difficulty_level": "medium"
  },
  {
    "problem_text": "What kind of validation logic might accidentally exclude someone — even if it's ‘correct’?",
    "solution_text": "Students might describe names, forms, or digital systems that reject by strict pattern instead of actual value.",
    "tags": ["fairness", "logic_critique", "edge_cases"],
    "difficulty_level": "medium"
  }
]
